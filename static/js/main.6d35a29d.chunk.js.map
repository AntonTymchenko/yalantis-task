{"version":3,"sources":["views/EmployeesBirthday.js","service/employees-api.js","views/Employees.js","App.js","index.js"],"names":["monthNames","EmployeesBirthday","activeId","emploList","listOfChekedEmployees","createDate","string","date","slice","split","reverse","month","forEach","item","idEmployees","id","push","sort","prev","next","lastName","compareAndSort","className","Date","getMonth","currentMonth","length","newYear","firstPart","secondPart","chanchingYearToCurrentMonth","map","dob","includes","firstName","fetchEmployess","fetch","then","response","status","json","Employees","setActiveId","arr_EN","onSubmitButtons","event","target","value","indx","findIndex","name","splice","some","prevId","isChecked","type","arr","i","defaultChecked","onClick","itemOfList","App","useState","employees","setEmployees","error","setError","JSON","parse","localStorage","getItem","useEffect","data","state","catch","err","console","log","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d35a29d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./EmployeesBirthday.css\";\r\nconst monthNames = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\n\r\nconst EmployeesBirthday = ({ activeId, emploList }) => {\r\n  const listOfChekedEmployees = [];\r\n\r\n  const createDate = (string) => {\r\n    const date = string.slice(0, 10).split(\"-\").reverse();\r\n    const month = monthNames[+date[1] - 1];\r\n\r\n    return `${date[0]} ${month}, ${date[2]} year`;\r\n  };\r\n\r\n  const compareAndSort = (activeId, emploList) => {\r\n    emploList.forEach((item) => {\r\n      activeId.forEach((idEmployees) => {\r\n        if (item.id === idEmployees) {\r\n          listOfChekedEmployees.push(item);\r\n        }\r\n      });\r\n    });\r\n\r\n    listOfChekedEmployees.sort((prev, next) => prev.lastName - next.lastName);\r\n\r\n    return listOfChekedEmployees;\r\n  };\r\n\r\n  compareAndSort(activeId, emploList);\r\n\r\n  const currentMonth = () => {\r\n    const date = new Date();\r\n    const month = monthNames[date.getMonth()];\r\n    return month;\r\n  };\r\n\r\n  const chanchingYearToCurrentMonth = () => {\r\n    const month = new Date().getMonth();\r\n    const newYear = [...monthNames];\r\n    const firstPart = [...newYear.slice(month)];\r\n    const secondPart = [...newYear.slice(0, month)];\r\n    return [...firstPart, ...secondPart];\r\n  };\r\n\r\n  return (\r\n    <div className=\"birthPart\">\r\n      <h3>Employees birthday</h3>\r\n      <p>Current month: {currentMonth()}</p>\r\n      <ul>\r\n        {listOfChekedEmployees.length === 0 ? (\r\n          <li key=\"1\">Employees List is empty</li>\r\n        ) : (\r\n          chanchingYearToCurrentMonth().map((month) => {\r\n            return (\r\n              <li key={month}>\r\n                {month}\r\n                <ul>\r\n                  {listOfChekedEmployees.map((item) => {\r\n                    if (createDate(item.dob).includes(month)) {\r\n                      return (\r\n                        <li key={item.id}>\r\n                          <p>\r\n                            <span>{item.lastName}</span>{\" \"}\r\n                            <span>{item.firstName}</span> -\r\n                            <span>{createDate(item.dob)}</span>\r\n                          </p>\r\n                        </li>\r\n                      );\r\n                    }\r\n                    return null;\r\n                  })}\r\n                </ul>\r\n              </li>\r\n            );\r\n          })\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeesBirthday;\r\n\r\n// listOfChekedEmployees.map((item) => (\r\n//   <li key={item.id}>\r\n//     <p>\r\n//       <span>{item.lastName}</span> <span>{item.firstName}</span> -\r\n//       <span>{createDate(item.dob)}</span>\r\n//     </p>\r\n//   </li>\r\n// ))\r\n","function fetchEmployess() {\r\n  return fetch(\r\n    \"https://yalantis-react-school-api.yalantis.com/api/task0/users\"\r\n  ).then((response) => {\r\n    if (response.status === 200) {\r\n      return response.json();\r\n    }\r\n  });\r\n}\r\n\r\nexport default fetchEmployess;\r\n","import \"../views/Employees.css\";\r\n\r\nconst Employees = ({ emploList, setActiveId, activeId }) => {\r\n  const arr_EN = [\r\n    \"A\",\r\n    \"B\",\r\n    \"C\",\r\n    \"D\",\r\n    \"E\",\r\n    \"F\",\r\n    \"G\",\r\n    \"H\",\r\n    \"I\",\r\n    \"J\",\r\n    \"K\",\r\n    \"L\",\r\n    \"M\",\r\n    \"N\",\r\n    \"O\",\r\n    \"P\",\r\n    \"Q\",\r\n    \"R\",\r\n    \"S\",\r\n    \"T\",\r\n    \"U\",\r\n    \"V\",\r\n    \"W\",\r\n    \"X\",\r\n    \"Y\",\r\n    \"Z\",\r\n  ];\r\n  const onSubmitButtons = (event) => {\r\n    if (event.target.value === \"no active\") {\r\n      const indx = activeId.findIndex((item) => item === event.target.name);\r\n      if (indx === -1) {\r\n        return;\r\n      }\r\n      activeId.splice(indx, 1);\r\n      setActiveId(() => [...activeId]);\r\n    }\r\n    if (event.target.value === \"active\") {\r\n      if (activeId.some((id) => id === event.target.name)) {\r\n        return;\r\n      }\r\n      setActiveId((prevId) => [...prevId, event.target.name]);\r\n    }\r\n  };\r\n  const isChecked = (id) => {\r\n    return activeId.some((item) => item === id);\r\n  };\r\n\r\n  const itemOfList = () => {\r\n    const arr = [];\r\n\r\n    for (let i = 0; i < arr_EN.length; i += 1) {\r\n      arr.push(\r\n        <li key={arr_EN[i]} className=\"mainListItem\">\r\n          {\r\n            <ul className=\"secondList\">\r\n              {!emploList.some(\r\n                ({ firstName }) => firstName[0] === arr_EN[i]\r\n              ) ? (\r\n                <li key=\"12\">«No Employees»</li>\r\n              ) : (\r\n                emploList.map(({ id, firstName, lastName }) => {\r\n                  if (arr_EN[i] === firstName[0]) {\r\n                    return (\r\n                      <li key={id}>\r\n                        <p className={isChecked(id) ? \"highlighted\" : \"usual\"}>\r\n                          {firstName}\r\n                        </p>\r\n                        <p className={isChecked(id) ? \"highlighted\" : \"usual\"}>\r\n                          {lastName}\r\n                        </p>\r\n                        <form className=\"form\">\r\n                          <label>\r\n                            no active\r\n                            <input\r\n                              type=\"radio\"\r\n                              name={`${id}`}\r\n                              value=\"no active\"\r\n                              defaultChecked={isChecked(id) ? true : false}\r\n                              onClick={(event, id) =>\r\n                                onSubmitButtons(event, id)\r\n                              }\r\n                            />\r\n                          </label>\r\n                          <label>\r\n                            active\r\n                            <input\r\n                              type=\"radio\"\r\n                              name={`${id}`}\r\n                              value=\"active\"\r\n                              defaultChecked={isChecked(id) ? true : false}\r\n                              onClick={(event, id) =>\r\n                                onSubmitButtons(event, id)\r\n                              }\r\n                            />\r\n                          </label>\r\n                        </form>\r\n                      </li>\r\n                    );\r\n                  }\r\n                  return null;\r\n                })\r\n              )}\r\n            </ul>\r\n          }\r\n        </li>\r\n      );\r\n    }\r\n    return arr;\r\n  };\r\n  return (\r\n    <div className=\"leftSide\">\r\n      <ol type=\"A\" className=\"mainList\">\r\n        {itemOfList()}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Employees;\r\n","import { useState, useEffect } from \"react\";\nimport EmployeesBirthday from \"./views/EmployeesBirthday\";\nimport \"./App.css\";\n\nimport fetchEmployess from \"./service/employees-api\";\nimport Employees from \"./views/Employees\";\n\nfunction App() {\n  const [employees, setEmployees] = useState([]);\n  const [error, setError] = useState(null);\n  const [activeId, setActiveId] = useState(\n    JSON.parse(localStorage.getItem(\"activeId\")) || []\n  );\n\n  useEffect(() => {\n    const fetchEmployeesList = () => {\n      fetchEmployess()\n        .then((data) => {\n          data.sort((prev, next) => {\n            if (prev.firstName > next.firstName) return 1;\n            if (prev.firstName < next.firstName) return -1;\n            return 0;\n          });\n          setEmployees((state) => [...state, ...data]);\n        })\n        .catch((err) => {\n          setError(err);\n          console.log(error);\n        });\n    };\n\n    fetchEmployeesList();\n  }, [error]);\n  useEffect(() => {\n    localStorage.setItem(\"activeId\", JSON.stringify(activeId || []));\n    localStorage.setItem(\"employees\", JSON.stringify(employees || []));\n  }, [activeId, employees]);\n\n  return (\n    <div className=\"mainSection\">\n      <Employees\n        emploList={employees}\n        setActiveId={setActiveId}\n        activeId={activeId}\n      />\n      <EmployeesBirthday activeId={activeId} emploList={employees} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}